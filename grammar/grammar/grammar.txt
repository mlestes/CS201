unary : INTEGER
      | REAL
      | VARIABLE
      | VARIABLE OPEN_PAREN expressionlist CLOSE_PAREN
      | prefix unary
      | unary suffix
      | OPEN_PAREN expression CLOSE_PAREN
      | STRING
      | RETURN expression
      | BREAK
      | CONTINUE
      | PRINT OPEN_PAREN printstatement CLOSE_PAREN

ternary : expression QUESTION expression COLON expression

expression : unary
           | unary operator expression
           | unary comparator expression
           | unary logic expression

expressionlist : expression
               | expression expressionlist
               | EMPTY

printstatement : STRING
               | VARIABLE
               | STRING printstatement
               | VARIABLE printstatement

operator : PLUS
         | TIMES
         | MINUS
         | DIVIDE
         | MOD
         | POW
         | ASSIGN
         | DOT

comparator: EQUALS_EQUALS
          | GREATER_THAN
          | LESS_THAN
          | GREATER_THAN_EQUALS
          | LESS_THAN_EQUALS
          | NOT comparator

logic : AND
      | OR
      | XOR

prefix : PLUS
       | MINUS
       | PLUS_PLUS
       | MINUS_MINUS
       | AND
       | STAR

suffix : PLUS_PLUS
       | MINUS_MINUS

ifstate : IF OPEN_PAREN expression CLOSE_PAREN block elsestate

elsestate : ELSE block
          | EMPTY

whilestate : WHILE OPEN_PAREN expression CLOSE_PAREN block

block : BEGIN statementlist END
      | EMPTY

statementlist : statement
              | statement statementlist
              | EMPTY

statement : expression SEMI_COLON
          | ternary SEMI_COLON
          | vardef SEMI_COLON
          | funcdef 
          | ifstate
          | whilestate

vardef : VAR VARIABLE ASSIGN expression
       | VAR VARIABLE

funcdef : DEFINE VARIABLE OPEN_PAREN parameterlist CLOSE_PAREN block
        | DEFINE VARIABLE SEMI_COLON

parameterlist : VARIABLE
              | VARIABLE parameterlist
              | EMPTY

structdef : STRUCT VARIABLE block

program : funcdef
        | structdef
        | expression
        | funcdef program
        | expression program
        | structdef program
